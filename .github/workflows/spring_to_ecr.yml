name: Publish image to ecr
on:
  push:
    paths:
      - src/
      - .github/workflows/spring_to_ecr.yml
      - infra/**
    branches: 
      - main
jobs:
  push-to-registry:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Build, tag, and push Docker image
        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat2006-ecr
          rev=$(git rev-parse --short HEAD)
          docker build . -t ppe
          docker tag ppe 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat2006-ecr:$rev
          docker tag ppe 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat2006-ecr:latest
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat2006-ecr:$rev
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat2006-ecr:latest
          
  terraformiarius:
    defaults:
      run:
        working-directory: infra
    name: "Terraform"
    needs: push-to-registry
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
      IMAGE: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat2006-ecr:latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Plan
        id: plan
        run: terraform plan -var="image_identifier=$IMAGE" -no-color
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        run: terraform apply -var="image_identifier=$IMAGE" -auto-approve
